name: deployment

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  releaseJob:
    name: Publish artifact & update version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      # ref: https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
      - name: Set version env
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "TAG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # ref: https://stackoverflow.com/questions/65606498/how-to-access-github-tag-message-in-github-actions
      - name: Get and set tag message
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          git tag -l --format='%(contents:subject)' ${GITHUB_REF#refs/*/}
          echo "TAG_MESSAGE=$(git tag -l --format='%(contents:subject)' ${GITHUB_REF#refs/*/})" >> $GITHUB_ENV

      - name: Test env
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
          echo $TAG_VERSION
          echo ${{ env.TAG_VERSION }}
          echo ${{ env.TAG_MESSAGE }}

      - name: setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '16'
          cache: 'maven'

      - name: Bump POM Version
        run: mvn versions:set -DnewVersion=${{ env.RELEASE_VERSION }}

      #      - name: Build with Maven
      #        run: mvn -B package --file pom.xml

      - name: Publish to GitHub Packages Apache Maven
        #        run: mvn --batch-mode deploy
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

      #      - name: Set up Apache Maven Central
      #        uses: actions/setup-java@v2
      #        with: # running setup-java again overwrites the settings.xml
      #          distribution: 'temurin'
      #          java-version: '11'
      #          server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
      #          server-username: MAVEN_USERNAME # env variable for username in deploy
      #          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
      #          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
      #          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
      #
      #      - name: Publish to Apache Maven Central
      #        run: mvn deploy
      #        env:
      #          MAVEN_USERNAME: maven_username123
      #          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
      #          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      # ref: https://github.com/marketplace/actions/delete-tag-and-release
      - name: Delete the v tag
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true # default: false
          tag_name: ${{ env.TAG_VERSION }} # tag name to delete
          # repo: <owner>/<repoName> # target repo (optional). defaults to repo running this action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ env.RELEASE_VERSION }}
          version-fragment: 'bug'

      - name: Add SNAPSHOT to new version
        run: mvn versions:set -DnewVersion=${{ env.RELEASE_VERSION }}-SNAPSHOT

      # ref: https://github.com/marketplace/actions/add-commit
      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: UnumID Admin
          author_email: liam@unum.id
          message: '[Release ${{ env.RELEASE_VERSION }}] ${{ env.TAG_MESSAGE }}'
          add: '["pom.xml"]'
          branch: pub # todo make main

      # ref: https://github.com/actions/create-release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}
          body: ${{ env.TAG_MESSAGE }}
          # body: |
          #   Changes in this Release
          #   - First Change
          #   - Second Change
          draft: false
          prerelease: false
          commitish: pub # todo make main