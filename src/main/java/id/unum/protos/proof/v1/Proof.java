// Code generated by Wire protocol buffer compiler, do not edit.
// Source: proof.v1.Proof in proof.proto
package id.unum.protos.proof.v1;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.time.Instant;
import java.util.Objects;
import okio.ByteString;

/**
 * Object to encapsulate cryptographic proof for any signed object: Credentials, Presentations, PresentationRequests.
 */
public final class Proof extends Message<Proof, Proof.Builder> {
  public static final ProtoAdapter<Proof> ADAPTER = new ProtoAdapter_Proof();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "signatureValue"
  )
  public final String signature_value;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final String type;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "verificationMethod"
  )
  public final String verification_method;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INSTANT",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final Instant created;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "proofPurpose"
  )
  public final String proof_purpose;

  public Proof(String signature_value, String type, String verification_method, Instant created,
      String proof_purpose) {
    this(signature_value, type, verification_method, created, proof_purpose, ByteString.EMPTY);
  }

  public Proof(String signature_value, String type, String verification_method, Instant created,
      String proof_purpose, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    if (signature_value == null) {
      throw new IllegalArgumentException("signature_value == null");
    }
    this.signature_value = signature_value;
    if (type == null) {
      throw new IllegalArgumentException("type == null");
    }
    this.type = type;
    if (verification_method == null) {
      throw new IllegalArgumentException("verification_method == null");
    }
    this.verification_method = verification_method;
    this.created = created;
    if (proof_purpose == null) {
      throw new IllegalArgumentException("proof_purpose == null");
    }
    this.proof_purpose = proof_purpose;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.signature_value = signature_value;
    builder.type = type;
    builder.verification_method = verification_method;
    builder.created = created;
    builder.proof_purpose = proof_purpose;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Proof)) return false;
    Proof o = (Proof) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(signature_value, o.signature_value)
        && Internal.equals(type, o.type)
        && Internal.equals(verification_method, o.verification_method)
        && Internal.equals(created, o.created)
        && Internal.equals(proof_purpose, o.proof_purpose);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (signature_value != null ? signature_value.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (verification_method != null ? verification_method.hashCode() : 0);
      result = result * 37 + (created != null ? created.hashCode() : 0);
      result = result * 37 + (proof_purpose != null ? proof_purpose.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (signature_value != null) builder.append(", signature_value=").append(Internal.sanitize(signature_value));
    if (type != null) builder.append(", type=").append(Internal.sanitize(type));
    if (verification_method != null) builder.append(", verification_method=").append(Internal.sanitize(verification_method));
    if (created != null) builder.append(", created=").append(created);
    if (proof_purpose != null) builder.append(", proof_purpose=").append(Internal.sanitize(proof_purpose));
    return builder.replace(0, 2, "Proof{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Proof, Builder> {
    public String signature_value;

    public String type;

    public String verification_method;

    public Instant created;

    public String proof_purpose;

    public Builder() {
      signature_value = "";
      type = "";
      verification_method = "";
      proof_purpose = "";
    }

    public Builder signature_value(String signature_value) {
      this.signature_value = signature_value;
      return this;
    }

    public Builder type(String type) {
      this.type = type;
      return this;
    }

    public Builder verification_method(String verification_method) {
      this.verification_method = verification_method;
      return this;
    }

    public Builder created(Instant created) {
      this.created = created;
      return this;
    }

    public Builder proof_purpose(String proof_purpose) {
      this.proof_purpose = proof_purpose;
      return this;
    }

    @Override
    public Proof build() {
      return new Proof(signature_value, type, verification_method, created, proof_purpose, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Proof extends ProtoAdapter<Proof> {
    public ProtoAdapter_Proof() {
      super(FieldEncoding.LENGTH_DELIMITED, Proof.class, "type.googleapis.com/proof.v1.Proof", Syntax.PROTO_3, null);
    }

    @Override
    public int encodedSize(Proof value) {
      int result = 0;
      if (!Objects.equals(value.signature_value, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(1, value.signature_value);
      }
      if (!Objects.equals(value.type, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(2, value.type);
      }
      if (!Objects.equals(value.verification_method, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(3, value.verification_method);
      }
      if (!Objects.equals(value.created, null)) {
        result += ProtoAdapter.INSTANT.encodedSizeWithTag(4, value.created);
      }
      if (!Objects.equals(value.proof_purpose, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(5, value.proof_purpose);
      }
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, Proof value) throws IOException {
      if (!Objects.equals(value.signature_value, "")) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.signature_value);
      if (!Objects.equals(value.type, "")) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.type);
      if (!Objects.equals(value.verification_method, "")) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.verification_method);
      if (!Objects.equals(value.created, null)) ProtoAdapter.INSTANT.encodeWithTag(writer, 4, value.created);
      if (!Objects.equals(value.proof_purpose, "")) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.proof_purpose);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, Proof value) throws IOException {
      writer.writeBytes(value.unknownFields());
      if (!Objects.equals(value.proof_purpose, "")) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.proof_purpose);
      if (!Objects.equals(value.created, null)) ProtoAdapter.INSTANT.encodeWithTag(writer, 4, value.created);
      if (!Objects.equals(value.verification_method, "")) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.verification_method);
      if (!Objects.equals(value.type, "")) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.type);
      if (!Objects.equals(value.signature_value, "")) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.signature_value);
    }

    @Override
    public Proof decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.signature_value(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.type(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.verification_method(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.created(ProtoAdapter.INSTANT.decode(reader)); break;
          case 5: builder.proof_purpose(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public Proof redact(Proof value) {
      Builder builder = value.newBuilder();
      if (builder.created != null) builder.created = ProtoAdapter.INSTANT.redact(builder.created);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
