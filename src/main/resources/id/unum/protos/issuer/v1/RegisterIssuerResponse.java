// Code generated by Wire protocol buffer compiler, do not edit.
// Source: issuer.v1.RegisterIssuerResponse in issuer.proto
package id.unum.protos.issuer.v1;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.Objects;
import okio.ByteString;

/**
 * Object to encapsulate an Issuer entity
 */
public final class RegisterIssuerResponse extends Message<RegisterIssuerResponse, RegisterIssuerResponse.Builder> {
  public static final ProtoAdapter<RegisterIssuerResponse> ADAPTER = new ProtoAdapter_RegisterIssuerResponse();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "customerUuid"
  )
  public final String customer_uuid;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final String name;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "isAuthorized"
  )
  public final boolean is_authorized;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "apiKey"
  )
  public final String api_key;

  public RegisterIssuerResponse(String customer_uuid, String name, boolean is_authorized,
      String api_key) {
    this(customer_uuid, name, is_authorized, api_key, ByteString.EMPTY);
  }

  public RegisterIssuerResponse(String customer_uuid, String name, boolean is_authorized,
      String api_key, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    if (customer_uuid == null) {
      throw new IllegalArgumentException("customer_uuid == null");
    }
    this.customer_uuid = customer_uuid;
    if (name == null) {
      throw new IllegalArgumentException("name == null");
    }
    this.name = name;
    this.is_authorized = is_authorized;
    if (api_key == null) {
      throw new IllegalArgumentException("api_key == null");
    }
    this.api_key = api_key;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.customer_uuid = customer_uuid;
    builder.name = name;
    builder.is_authorized = is_authorized;
    builder.api_key = api_key;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RegisterIssuerResponse)) return false;
    RegisterIssuerResponse o = (RegisterIssuerResponse) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(customer_uuid, o.customer_uuid)
        && Internal.equals(name, o.name)
        && Internal.equals(is_authorized, o.is_authorized)
        && Internal.equals(api_key, o.api_key);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (customer_uuid != null ? customer_uuid.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + Boolean.hashCode(is_authorized);
      result = result * 37 + (api_key != null ? api_key.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (customer_uuid != null) builder.append(", customer_uuid=").append(Internal.sanitize(customer_uuid));
    if (name != null) builder.append(", name=").append(Internal.sanitize(name));
    builder.append(", is_authorized=").append(is_authorized);
    if (api_key != null) builder.append(", api_key=").append(Internal.sanitize(api_key));
    return builder.replace(0, 2, "RegisterIssuerResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<RegisterIssuerResponse, Builder> {
    public String customer_uuid;

    public String name;

    public boolean is_authorized;

    public String api_key;

    public Builder() {
      customer_uuid = "";
      name = "";
      is_authorized = false;
      api_key = "";
    }

    public Builder customer_uuid(String customer_uuid) {
      this.customer_uuid = customer_uuid;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder is_authorized(boolean is_authorized) {
      this.is_authorized = is_authorized;
      return this;
    }

    public Builder api_key(String api_key) {
      this.api_key = api_key;
      return this;
    }

    @Override
    public RegisterIssuerResponse build() {
      return new RegisterIssuerResponse(customer_uuid, name, is_authorized, api_key, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_RegisterIssuerResponse extends ProtoAdapter<RegisterIssuerResponse> {
    public ProtoAdapter_RegisterIssuerResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, RegisterIssuerResponse.class, "type.googleapis.com/issuer.v1.RegisterIssuerResponse", Syntax.PROTO_3, null);
    }

    @Override
    public int encodedSize(RegisterIssuerResponse value) {
      int result = 0;
      if (!Objects.equals(value.customer_uuid, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(1, value.customer_uuid);
      }
      if (!Objects.equals(value.name, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(2, value.name);
      }
      if (!Objects.equals(value.is_authorized, false)) {
        result += ProtoAdapter.BOOL.encodedSizeWithTag(3, value.is_authorized);
      }
      if (!Objects.equals(value.api_key, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(4, value.api_key);
      }
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, RegisterIssuerResponse value) throws IOException {
      if (!Objects.equals(value.customer_uuid, "")) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.customer_uuid);
      if (!Objects.equals(value.name, "")) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      if (!Objects.equals(value.is_authorized, false)) ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.is_authorized);
      if (!Objects.equals(value.api_key, "")) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.api_key);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, RegisterIssuerResponse value) throws IOException {
      writer.writeBytes(value.unknownFields());
      if (!Objects.equals(value.api_key, "")) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.api_key);
      if (!Objects.equals(value.is_authorized, false)) ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.is_authorized);
      if (!Objects.equals(value.name, "")) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      if (!Objects.equals(value.customer_uuid, "")) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.customer_uuid);
    }

    @Override
    public RegisterIssuerResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.customer_uuid(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.is_authorized(ProtoAdapter.BOOL.decode(reader)); break;
          case 4: builder.api_key(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public RegisterIssuerResponse redact(RegisterIssuerResponse value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
