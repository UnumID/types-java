// Code generated by Wire protocol buffer compiler, do not edit.
// Source: crypto.v1.EncryptedData in crypto.proto
package id.unum.protos.crypto.v1;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.Objects;
import okio.ByteString;

/**
 * Object to encapsulate encrypted data
 */
public final class EncryptedData extends Message<EncryptedData, EncryptedData.Builder> {
  public static final ProtoAdapter<EncryptedData> ADAPTER = new ProtoAdapter_EncryptedData();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final String data;

  @WireField(
      tag = 2,
      adapter = "id.unum.protos.crypto.v1.EncryptedKey#ADAPTER",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final EncryptedKey key;

  public EncryptedData(String data, EncryptedKey key) {
    this(data, key, ByteString.EMPTY);
  }

  public EncryptedData(String data, EncryptedKey key, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    if (data == null) {
      throw new IllegalArgumentException("data == null");
    }
    this.data = data;
    this.key = key;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.data = data;
    builder.key = key;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof EncryptedData)) return false;
    EncryptedData o = (EncryptedData) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(data, o.data)
        && Internal.equals(key, o.key);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (data != null ? data.hashCode() : 0);
      result = result * 37 + (key != null ? key.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (data != null) builder.append(", data=").append(Internal.sanitize(data));
    if (key != null) builder.append(", key=").append(key);
    return builder.replace(0, 2, "EncryptedData{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<EncryptedData, Builder> {
    public String data;

    public EncryptedKey key;

    public Builder() {
      data = "";
    }

    public Builder data(String data) {
      this.data = data;
      return this;
    }

    public Builder key(EncryptedKey key) {
      this.key = key;
      return this;
    }

    @Override
    public EncryptedData build() {
      return new EncryptedData(data, key, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_EncryptedData extends ProtoAdapter<EncryptedData> {
    public ProtoAdapter_EncryptedData() {
      super(FieldEncoding.LENGTH_DELIMITED, EncryptedData.class, "type.googleapis.com/crypto.v1.EncryptedData", Syntax.PROTO_3, null);
    }

    @Override
    public int encodedSize(EncryptedData value) {
      int result = 0;
      if (!Objects.equals(value.data, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(1, value.data);
      }
      if (!Objects.equals(value.key, null)) {
        result += EncryptedKey.ADAPTER.encodedSizeWithTag(2, value.key);
      }
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, EncryptedData value) throws IOException {
      if (!Objects.equals(value.data, "")) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.data);
      if (!Objects.equals(value.key, null)) EncryptedKey.ADAPTER.encodeWithTag(writer, 2, value.key);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, EncryptedData value) throws IOException {
      writer.writeBytes(value.unknownFields());
      if (!Objects.equals(value.key, null)) EncryptedKey.ADAPTER.encodeWithTag(writer, 2, value.key);
      if (!Objects.equals(value.data, "")) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.data);
    }

    @Override
    public EncryptedData decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.data(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.key(EncryptedKey.ADAPTER.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public EncryptedData redact(EncryptedData value) {
      Builder builder = value.newBuilder();
      if (builder.key != null) builder.key = EncryptedKey.ADAPTER.redact(builder.key);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
