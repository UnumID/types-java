// Code generated by Wire protocol buffer compiler, do not edit.
// Source: presentationRequest.v1.PresentationRequest in presentationRequest.proto
package id.unum.protos.presentationRequest.v1;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import id.unum.protos.credential.v1.CredentialRequest;
import id.unum.protos.proof.v1.Proof;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.time.Instant;
import java.util.List;
import java.util.Objects;
import okio.ByteString;

/**
 * Encapsulates request attributes for the purposes of requesting presentation of credentials with the addition of a proof.
 * Tighting coupled to UnsignedPresentationRequest.
 */
public final class PresentationRequest extends Message<PresentationRequest, PresentationRequest.Builder> {
  public static final ProtoAdapter<PresentationRequest> ADAPTER = new ProtoAdapter_PresentationRequest();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "id.unum.protos.credential.v1.CredentialRequest#ADAPTER",
      label = WireField.Label.REPEATED,
      jsonName = "credentialRequests"
  )
  public final List<CredentialRequest> credential_requests;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "holderAppUuid"
  )
  public final String holder_app_uuid;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final String verifier;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INSTANT",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "createdAt"
  )
  public final Instant created_at;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#INSTANT",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "updatedAt"
  )
  public final Instant updated_at;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#INSTANT",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "expiresAt"
  )
  public final Instant expires_at;

  /**
   * a string representation of an ambiguous object. Note: the Any type does not work because still needs a scheme (but can be assigned dymanically) & Struct does not work becuase not determinsitcally serialzied across langauges
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final String metadata;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final String uuid;

  @WireField(
      tag = 9,
      adapter = "id.unum.protos.proof.v1.Proof#ADAPTER",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final Proof proof;

  /**
   * an indentifier for related presetnation requests across versions
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final String id;

  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final String version;

  public PresentationRequest(List<CredentialRequest> credential_requests, String holder_app_uuid,
      String verifier, Instant created_at, Instant updated_at, Instant expires_at, String metadata,
      String uuid, Proof proof, String id, String version) {
    this(credential_requests, holder_app_uuid, verifier, created_at, updated_at, expires_at, metadata, uuid, proof, id, version, ByteString.EMPTY);
  }

  public PresentationRequest(List<CredentialRequest> credential_requests, String holder_app_uuid,
      String verifier, Instant created_at, Instant updated_at, Instant expires_at, String metadata,
      String uuid, Proof proof, String id, String version, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.credential_requests = Internal.immutableCopyOf("credential_requests", credential_requests);
    if (holder_app_uuid == null) {
      throw new IllegalArgumentException("holder_app_uuid == null");
    }
    this.holder_app_uuid = holder_app_uuid;
    if (verifier == null) {
      throw new IllegalArgumentException("verifier == null");
    }
    this.verifier = verifier;
    this.created_at = created_at;
    this.updated_at = updated_at;
    this.expires_at = expires_at;
    if (metadata == null) {
      throw new IllegalArgumentException("metadata == null");
    }
    this.metadata = metadata;
    if (uuid == null) {
      throw new IllegalArgumentException("uuid == null");
    }
    this.uuid = uuid;
    this.proof = proof;
    if (id == null) {
      throw new IllegalArgumentException("id == null");
    }
    this.id = id;
    if (version == null) {
      throw new IllegalArgumentException("version == null");
    }
    this.version = version;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.credential_requests = Internal.copyOf(credential_requests);
    builder.holder_app_uuid = holder_app_uuid;
    builder.verifier = verifier;
    builder.created_at = created_at;
    builder.updated_at = updated_at;
    builder.expires_at = expires_at;
    builder.metadata = metadata;
    builder.uuid = uuid;
    builder.proof = proof;
    builder.id = id;
    builder.version = version;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PresentationRequest)) return false;
    PresentationRequest o = (PresentationRequest) other;
    return unknownFields().equals(o.unknownFields())
        && credential_requests.equals(o.credential_requests)
        && Internal.equals(holder_app_uuid, o.holder_app_uuid)
        && Internal.equals(verifier, o.verifier)
        && Internal.equals(created_at, o.created_at)
        && Internal.equals(updated_at, o.updated_at)
        && Internal.equals(expires_at, o.expires_at)
        && Internal.equals(metadata, o.metadata)
        && Internal.equals(uuid, o.uuid)
        && Internal.equals(proof, o.proof)
        && Internal.equals(id, o.id)
        && Internal.equals(version, o.version);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + credential_requests.hashCode();
      result = result * 37 + (holder_app_uuid != null ? holder_app_uuid.hashCode() : 0);
      result = result * 37 + (verifier != null ? verifier.hashCode() : 0);
      result = result * 37 + (created_at != null ? created_at.hashCode() : 0);
      result = result * 37 + (updated_at != null ? updated_at.hashCode() : 0);
      result = result * 37 + (expires_at != null ? expires_at.hashCode() : 0);
      result = result * 37 + (metadata != null ? metadata.hashCode() : 0);
      result = result * 37 + (uuid != null ? uuid.hashCode() : 0);
      result = result * 37 + (proof != null ? proof.hashCode() : 0);
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (version != null ? version.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!credential_requests.isEmpty()) builder.append(", credential_requests=").append(credential_requests);
    if (holder_app_uuid != null) builder.append(", holder_app_uuid=").append(Internal.sanitize(holder_app_uuid));
    if (verifier != null) builder.append(", verifier=").append(Internal.sanitize(verifier));
    if (created_at != null) builder.append(", created_at=").append(created_at);
    if (updated_at != null) builder.append(", updated_at=").append(updated_at);
    if (expires_at != null) builder.append(", expires_at=").append(expires_at);
    if (metadata != null) builder.append(", metadata=").append(Internal.sanitize(metadata));
    if (uuid != null) builder.append(", uuid=").append(Internal.sanitize(uuid));
    if (proof != null) builder.append(", proof=").append(proof);
    if (id != null) builder.append(", id=").append(Internal.sanitize(id));
    if (version != null) builder.append(", version=").append(Internal.sanitize(version));
    return builder.replace(0, 2, "PresentationRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PresentationRequest, Builder> {
    public List<CredentialRequest> credential_requests;

    public String holder_app_uuid;

    public String verifier;

    public Instant created_at;

    public Instant updated_at;

    public Instant expires_at;

    public String metadata;

    public String uuid;

    public Proof proof;

    public String id;

    public String version;

    public Builder() {
      credential_requests = Internal.newMutableList();
      holder_app_uuid = "";
      verifier = "";
      metadata = "";
      uuid = "";
      id = "";
      version = "";
    }

    public Builder credential_requests(List<CredentialRequest> credential_requests) {
      Internal.checkElementsNotNull(credential_requests);
      this.credential_requests = credential_requests;
      return this;
    }

    public Builder holder_app_uuid(String holder_app_uuid) {
      this.holder_app_uuid = holder_app_uuid;
      return this;
    }

    public Builder verifier(String verifier) {
      this.verifier = verifier;
      return this;
    }

    public Builder created_at(Instant created_at) {
      this.created_at = created_at;
      return this;
    }

    public Builder updated_at(Instant updated_at) {
      this.updated_at = updated_at;
      return this;
    }

    public Builder expires_at(Instant expires_at) {
      this.expires_at = expires_at;
      return this;
    }

    /**
     * a string representation of an ambiguous object. Note: the Any type does not work because still needs a scheme (but can be assigned dymanically) & Struct does not work becuase not determinsitcally serialzied across langauges
     */
    public Builder metadata(String metadata) {
      this.metadata = metadata;
      return this;
    }

    public Builder uuid(String uuid) {
      this.uuid = uuid;
      return this;
    }

    public Builder proof(Proof proof) {
      this.proof = proof;
      return this;
    }

    /**
     * an indentifier for related presetnation requests across versions
     */
    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder version(String version) {
      this.version = version;
      return this;
    }

    @Override
    public PresentationRequest build() {
      return new PresentationRequest(credential_requests, holder_app_uuid, verifier, created_at, updated_at, expires_at, metadata, uuid, proof, id, version, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PresentationRequest extends ProtoAdapter<PresentationRequest> {
    public ProtoAdapter_PresentationRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, PresentationRequest.class, "type.googleapis.com/presentationRequest.v1.PresentationRequest", Syntax.PROTO_3, null);
    }

    @Override
    public int encodedSize(PresentationRequest value) {
      int result = 0;
      result += CredentialRequest.ADAPTER.asRepeated().encodedSizeWithTag(1, value.credential_requests);
      if (!Objects.equals(value.holder_app_uuid, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(2, value.holder_app_uuid);
      }
      if (!Objects.equals(value.verifier, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(3, value.verifier);
      }
      if (!Objects.equals(value.created_at, null)) {
        result += ProtoAdapter.INSTANT.encodedSizeWithTag(4, value.created_at);
      }
      if (!Objects.equals(value.updated_at, null)) {
        result += ProtoAdapter.INSTANT.encodedSizeWithTag(5, value.updated_at);
      }
      if (!Objects.equals(value.expires_at, null)) {
        result += ProtoAdapter.INSTANT.encodedSizeWithTag(6, value.expires_at);
      }
      if (!Objects.equals(value.metadata, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(7, value.metadata);
      }
      if (!Objects.equals(value.uuid, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(8, value.uuid);
      }
      if (!Objects.equals(value.proof, null)) {
        result += Proof.ADAPTER.encodedSizeWithTag(9, value.proof);
      }
      if (!Objects.equals(value.id, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(10, value.id);
      }
      if (!Objects.equals(value.version, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(11, value.version);
      }
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, PresentationRequest value) throws IOException {
      CredentialRequest.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.credential_requests);
      if (!Objects.equals(value.holder_app_uuid, "")) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.holder_app_uuid);
      if (!Objects.equals(value.verifier, "")) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.verifier);
      if (!Objects.equals(value.created_at, null)) ProtoAdapter.INSTANT.encodeWithTag(writer, 4, value.created_at);
      if (!Objects.equals(value.updated_at, null)) ProtoAdapter.INSTANT.encodeWithTag(writer, 5, value.updated_at);
      if (!Objects.equals(value.expires_at, null)) ProtoAdapter.INSTANT.encodeWithTag(writer, 6, value.expires_at);
      if (!Objects.equals(value.metadata, "")) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.metadata);
      if (!Objects.equals(value.uuid, "")) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.uuid);
      if (!Objects.equals(value.proof, null)) Proof.ADAPTER.encodeWithTag(writer, 9, value.proof);
      if (!Objects.equals(value.id, "")) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.id);
      if (!Objects.equals(value.version, "")) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.version);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, PresentationRequest value) throws IOException {
      writer.writeBytes(value.unknownFields());
      if (!Objects.equals(value.version, "")) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.version);
      if (!Objects.equals(value.id, "")) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.id);
      if (!Objects.equals(value.proof, null)) Proof.ADAPTER.encodeWithTag(writer, 9, value.proof);
      if (!Objects.equals(value.uuid, "")) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.uuid);
      if (!Objects.equals(value.metadata, "")) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.metadata);
      if (!Objects.equals(value.expires_at, null)) ProtoAdapter.INSTANT.encodeWithTag(writer, 6, value.expires_at);
      if (!Objects.equals(value.updated_at, null)) ProtoAdapter.INSTANT.encodeWithTag(writer, 5, value.updated_at);
      if (!Objects.equals(value.created_at, null)) ProtoAdapter.INSTANT.encodeWithTag(writer, 4, value.created_at);
      if (!Objects.equals(value.verifier, "")) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.verifier);
      if (!Objects.equals(value.holder_app_uuid, "")) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.holder_app_uuid);
      CredentialRequest.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.credential_requests);
    }

    @Override
    public PresentationRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.credential_requests.add(CredentialRequest.ADAPTER.decode(reader)); break;
          case 2: builder.holder_app_uuid(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.verifier(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.created_at(ProtoAdapter.INSTANT.decode(reader)); break;
          case 5: builder.updated_at(ProtoAdapter.INSTANT.decode(reader)); break;
          case 6: builder.expires_at(ProtoAdapter.INSTANT.decode(reader)); break;
          case 7: builder.metadata(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.uuid(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.proof(Proof.ADAPTER.decode(reader)); break;
          case 10: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.version(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public PresentationRequest redact(PresentationRequest value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.credential_requests, CredentialRequest.ADAPTER);
      if (builder.created_at != null) builder.created_at = ProtoAdapter.INSTANT.redact(builder.created_at);
      if (builder.updated_at != null) builder.updated_at = ProtoAdapter.INSTANT.redact(builder.updated_at);
      if (builder.expires_at != null) builder.expires_at = ProtoAdapter.INSTANT.redact(builder.expires_at);
      if (builder.proof != null) builder.proof = Proof.ADAPTER.redact(builder.proof);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
