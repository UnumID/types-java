// Code generated by Wire protocol buffer compiler, do not edit.
// Source: presentation.v1.Presentation in presentation.proto
package id.unum.protos.presentation.v1;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import id.unum.protos.credential.v1.Credential;
import id.unum.protos.proof.v1.Proof;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import java.util.Objects;
import okio.ByteString;

/**
 * Encapsulates addition attributes to the unsigned presentation entity to create a Presentation entity.
 * Tightly coupled with UnsignedPresentation.
 */
public final class Presentation extends Message<Presentation, Presentation.Builder> {
  public static final ProtoAdapter<Presentation> ADAPTER = new ProtoAdapter_Presentation();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REPEATED
  )
  public final List<String> context;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REPEATED
  )
  public final List<String> type;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY,
      jsonName = "presentationRequestId"
  )
  public final String presentation_request_id;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final String verifierDid;

  @WireField(
      tag = 5,
      adapter = "id.unum.protos.credential.v1.Credential#ADAPTER",
      label = WireField.Label.REPEATED,
      jsonName = "verifiableCredential"
  )
  public final List<Credential> verifiable_credential;

  @WireField(
      tag = 6,
      adapter = "id.unum.protos.proof.v1.Proof#ADAPTER",
      label = WireField.Label.OMIT_IDENTITY
  )
  public final Proof proof;

  public Presentation(List<String> context, List<String> type, String presentation_request_id,
      String verifierDid, List<Credential> verifiable_credential, Proof proof) {
    this(context, type, presentation_request_id, verifierDid, verifiable_credential, proof, ByteString.EMPTY);
  }

  public Presentation(List<String> context, List<String> type, String presentation_request_id,
      String verifierDid, List<Credential> verifiable_credential, Proof proof,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.context = Internal.immutableCopyOf("context", context);
    this.type = Internal.immutableCopyOf("type", type);
    if (presentation_request_id == null) {
      throw new IllegalArgumentException("presentation_request_id == null");
    }
    this.presentation_request_id = presentation_request_id;
    if (verifierDid == null) {
      throw new IllegalArgumentException("verifierDid == null");
    }
    this.verifierDid = verifierDid;
    this.verifiable_credential = Internal.immutableCopyOf("verifiable_credential", verifiable_credential);
    this.proof = proof;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.context = Internal.copyOf(context);
    builder.type = Internal.copyOf(type);
    builder.presentation_request_id = presentation_request_id;
    builder.verifierDid = verifierDid;
    builder.verifiable_credential = Internal.copyOf(verifiable_credential);
    builder.proof = proof;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Presentation)) return false;
    Presentation o = (Presentation) other;
    return unknownFields().equals(o.unknownFields())
        && context.equals(o.context)
        && type.equals(o.type)
        && Internal.equals(presentation_request_id, o.presentation_request_id)
        && Internal.equals(verifierDid, o.verifierDid)
        && verifiable_credential.equals(o.verifiable_credential)
        && Internal.equals(proof, o.proof);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + context.hashCode();
      result = result * 37 + type.hashCode();
      result = result * 37 + (presentation_request_id != null ? presentation_request_id.hashCode() : 0);
      result = result * 37 + (verifierDid != null ? verifierDid.hashCode() : 0);
      result = result * 37 + verifiable_credential.hashCode();
      result = result * 37 + (proof != null ? proof.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!context.isEmpty()) builder.append(", context=").append(Internal.sanitize(context));
    if (!type.isEmpty()) builder.append(", type=").append(Internal.sanitize(type));
    if (presentation_request_id != null) builder.append(", presentation_request_id=").append(Internal.sanitize(presentation_request_id));
    if (verifierDid != null) builder.append(", verifierDid=").append(Internal.sanitize(verifierDid));
    if (!verifiable_credential.isEmpty()) builder.append(", verifiable_credential=").append(verifiable_credential);
    if (proof != null) builder.append(", proof=").append(proof);
    return builder.replace(0, 2, "Presentation{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Presentation, Builder> {
    public List<String> context;

    public List<String> type;

    public String presentation_request_id;

    public String verifierDid;

    public List<Credential> verifiable_credential;

    public Proof proof;

    public Builder() {
      context = Internal.newMutableList();
      type = Internal.newMutableList();
      presentation_request_id = "";
      verifierDid = "";
      verifiable_credential = Internal.newMutableList();
    }

    public Builder context(List<String> context) {
      Internal.checkElementsNotNull(context);
      this.context = context;
      return this;
    }

    public Builder type(List<String> type) {
      Internal.checkElementsNotNull(type);
      this.type = type;
      return this;
    }

    public Builder presentation_request_id(String presentation_request_id) {
      this.presentation_request_id = presentation_request_id;
      return this;
    }

    public Builder verifierDid(String verifierDid) {
      this.verifierDid = verifierDid;
      return this;
    }

    public Builder verifiable_credential(List<Credential> verifiable_credential) {
      Internal.checkElementsNotNull(verifiable_credential);
      this.verifiable_credential = verifiable_credential;
      return this;
    }

    public Builder proof(Proof proof) {
      this.proof = proof;
      return this;
    }

    @Override
    public Presentation build() {
      return new Presentation(context, type, presentation_request_id, verifierDid, verifiable_credential, proof, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Presentation extends ProtoAdapter<Presentation> {
    public ProtoAdapter_Presentation() {
      super(FieldEncoding.LENGTH_DELIMITED, Presentation.class, "type.googleapis.com/presentation.v1.Presentation", Syntax.PROTO_3, null);
    }

    @Override
    public int encodedSize(Presentation value) {
      int result = 0;
      result += ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(1, value.context);
      result += ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(2, value.type);
      if (!Objects.equals(value.presentation_request_id, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(3, value.presentation_request_id);
      }
      if (!Objects.equals(value.verifierDid, "")) {
        result += ProtoAdapter.STRING.encodedSizeWithTag(4, value.verifierDid);
      }
      result += Credential.ADAPTER.asRepeated().encodedSizeWithTag(5, value.verifiable_credential);
      if (!Objects.equals(value.proof, null)) {
        result += Proof.ADAPTER.encodedSizeWithTag(6, value.proof);
      }
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, Presentation value) throws IOException {
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 1, value.context);
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 2, value.type);
      if (!Objects.equals(value.presentation_request_id, "")) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.presentation_request_id);
      if (!Objects.equals(value.verifierDid, "")) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.verifierDid);
      Credential.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.verifiable_credential);
      if (!Objects.equals(value.proof, null)) Proof.ADAPTER.encodeWithTag(writer, 6, value.proof);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, Presentation value) throws IOException {
      writer.writeBytes(value.unknownFields());
      if (!Objects.equals(value.proof, null)) Proof.ADAPTER.encodeWithTag(writer, 6, value.proof);
      Credential.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.verifiable_credential);
      if (!Objects.equals(value.verifierDid, "")) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.verifierDid);
      if (!Objects.equals(value.presentation_request_id, "")) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.presentation_request_id);
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 2, value.type);
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 1, value.context);
    }

    @Override
    public Presentation decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.context.add(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.type.add(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.presentation_request_id(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.verifierDid(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.verifiable_credential.add(Credential.ADAPTER.decode(reader)); break;
          case 6: builder.proof(Proof.ADAPTER.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public Presentation redact(Presentation value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.verifiable_credential, Credential.ADAPTER);
      if (builder.proof != null) builder.proof = Proof.ADAPTER.redact(builder.proof);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
